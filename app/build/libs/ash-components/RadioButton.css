/*.default {
	display: block;

	width: 100%;
	height: 2bh;
	margin:0;

	transition: color calc(var(--durations-fastest) * 1s) ease-in, background-color calc(var(--durations-fastest) * 1s) ease-in, border-color calc(var(--durations-fastest) * 1s) ease-in, box-shadow calc(var(--durations-fastest) * 1s) ease-in, transform calc(var(--durations-fastest) * 1s) ease-in, opacity calc(var(--durations-fastest) * 1s) ease-in, visibility calc(var(--durations-fastest) * 1s) ease-in;
	will-change: color, background-color, border-color, box-shadow, transform, opacity, visibility;

	padding: calc((var(--grid-baselineHeight) * 0.5 - var(--textInput-default-borderWidth)) * 1px) calc((var(--grid-baselineHeight) * 0.5 - var(--textInput-default-borderWidth)) * 1px);

	color: var(--textInput-default-color);
	background-color: var(--textInput-default-backgroundColor);
	background-image: none;
	border-color: var(--textInput-default-borderColor);
	border-width: calc(var(--textInput-default-borderWidth) * 1px);
	border-radius: var(--textInput-default-borderRadius);
	outline: 0 none;
	box-shadow: var(--textInput-default-boxShadow);

	font-size: calc(var(--textInput-default-fontSize) * 1px);
	font-weight: 400;
	font-family: var(--text-fontFamily);

	&::placeholder {
		opacity: 1;

		color: var(--textInput-default-placeholder-color);
	}

	&:global(.isFocused), &:focus {
		color: var(--textInput-default-focused-color);
		background-color: var(--textInput-default-focused-backgroundColor);
		background-image: none;
		border-color: var(--textInput-default-focused-borderColor);
		outline: 0 none;
		box-shadow: var(--textInput-default-focused-boxShadow);

		&::placeholder {
			color: var(--textInput-default-focused-placeholder-color);
		}
	}

	&:global(.isInvalid)/* , &:invalid */ /*{
		color: var(--textInput-default-invalid-color);
		background-color: var(--textInput-default-invalid-backgroundColor);
		background-image: none;
		border-color: var(--textInput-default-invalid-borderColor);
		outline: 0 none;
		box-shadow: var(--textInput-default-invalid-boxShadow);

		&::placeholder {
			color: var(--textInput-default-invalid-placeholder-color);
		}
	}

	&:global(.isValid)/* , &:valid */ /*{
		color: var(--textInput-default-valid-color);
		background-color: var(--textInput-default-valid-backgroundColor);
		background-image: none;
		border-color: var(--textInput-default-valid-borderColor);
		outline: 0 none;
		box-shadow: var(--textInput-default-valid-boxShadow);

		&::placeholder {
			color: var(--textInput-default-valid-placeholder-color);
		}
	}

	&:global(.isHovered), &:hover {
		color: var(--textInput-default-hovered-color);
		background-color: var(--textInput-default-hovered-backgroundColor);
		background-image: none;
		border-color: var(--textInput-default-hovered-borderColor);
		outline: 0 none;
		box-shadow: var(--textInput-default-hovered-boxShadow);

		&::placeholder {
			color: var(--textInput-default-hovered-placeholder-color);
		}
	}

	&:global(.isDisabled), &:disabled {
		cursor: not-allowed;

		color: var(--textInput-default-disabled-color);
		background-color: var(--textInput-default-disabled-backgroundColor);
		background-image: none;
		border-color: var(--textInput-default-disabled-borderColor);
		outline: 0 none;
		box-shadow: var(--textInput-default-disabled-boxShadow);

		&::placeholder {
			color: var(--textInput-default-disabled-placeholder-color);
		}
	}
}*/

.default {
	position: absolute;
	overflow: hidden;

	height: 1px;
	width: 1px;
	clip: rect(0, 0, 0, 0);
	margin: -1px;
	padding: 0;

	opacity: 0;

	/* default */
	& + label {
		position: relative;
		display: block;
		z-index: 1;
		cursor: pointer;

		width: 100%;
		min-height: 1bh;
		margin: 0;
		padding: 0 0 0 calc(0.75bh + 0.375bh);

		transition: color sec(var(--durations-fastest)) ease-in, background-color sec(var(--durations-fastest)) ease-in, border-color sec(var(--durations-fastest)) ease-in, box-shadow sec(var(--durations-fastest)) ease-in, opacity sec(var(--durations-fastest)) ease-in, visibility sec(var(--durations-fastest)) ease-in;
		will-change: color, background-color, border-color, box-shadow, opacity, visibility;

		font-size: var(--radioButton-default-fontSize);
	}

	& + label::before {
		content: '';
		position: absolute;
		left: 0;
		top: calc((1bh - 0.75bh) / 2);

		width: 0.75bh;
		height: 0.75bh;

		color: var(--radioButton-default-color);
		background-color: var(--radioButton-default-backgroundColor);
		background-image: none;
		border-color: var(--radioButton-default-borderColor);
		border-width: calc(var(--radioButton-default-borderWidth) * 1px);
		border-radius: 50%;
		box-shadow: var(--radioButton-default-boxShadow);
	}

	& + label::after {
		content: '';
		position: absolute;
		left: 0;
		top: 0;

		width: 0.25bh;
		height: 0.25bh;

		opacity: 0;
		transition: opacity sec(var(--durations-fastest)) ease-in;
		transform: translateX(calc(0.75bh / 2 - 0.25bh / 2)) translateY(calc((1bh - 0.75bh) / 2 + 0.75bh / 2 - 0.25bh / 2));

		color: var(--radioButton-default-color);
		background-color: var(--radioButton-default-borderColor);
		border-radius: 50%;

		text-align: center;
	}

	/* selected */

	&:checked + label::after {
		opacity: 1;
	}


	/* focus */
	&:focus + label::before {
		color: var(--radioButton-default-focused-color);
		background-color: var(--radioButton-default-focused-backgroundColor);
		background-image: none;
		border-color: var(--radioButton-default-focused-borderColor);
		outline: 0 none;
		box-shadow: var(--radioButton-default-focused-boxShadow);
	}

	& + label::after {

	}

	/* hover */
	& + label:hover::before {
		color: var(--radioButton-default-hovered-color);
		background-color: var(--radioButton-default-hovered-backgroundColor);
		background-image: none;
		border-color: var(--radioButton-default-hovered-borderColor);
		outline: 0 none;
		box-shadow: var(--radioButton-default-hovered-boxShadow);
	}

	& + label::after {

	}

	/* selected focus */

	/* selected hover */

	/* disabled */
	&:disabled + label {
		cursor: not-allowed;

		color: ash.radioInput.disabled.color;
	}

	&:disabled + label::before {
		cursor: not-allowed;

		color: var(--radioButton-default-disabled-color);
		background-color: var(--radioButton-default-disabled-backgroundColor);
		background-image: none;
		border-color: var(--radioButton-default-disabled-borderColor);
		outline: 0 none;
		box-shadow: var(--radioButton-default-disabled-boxShadow);
	}

	& + label::after {

	}
}


